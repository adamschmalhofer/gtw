#!/bin/bash -e
# Copyright (c) 2014 Heikki Hokkanen <hoxu at users.sf.net>
# License: GPLv3

git_dir=$(readlink -f $(git rev-parse --git-dir))
task_command=$(git config --get gtw.command || echo "task")
task_dir=$(git config --get gtw.repository || echo "$git_dir/task")
branch=$(git config --get gtw.branch || echo tasks)
remote=$(git config --get gtw.remote || echo origin)

function branch_exists() {
	git show-ref --verify --quiet "$1"
}

function msg() {
	echo "gtw: $1" >&2
}

if [ ! -d "$task_dir" ]; then
	msg "taskwarrior repository not set up yet in $task_dir"
	if branch_exists refs/heads/"$branch" || branch_exists refs/remotes/"$remote"/"$branch"; then
		if ! branch_exists refs/heads/"$branch"; then
			msg "branch '$branch' exists in remote of main repository, checking out"
			git branch --track "$branch" "$remote"/"$branch"
		fi
		msg "branch '$branch' exists in main repository, cloning"
		git clone "$git_dir" "$task_dir"
		pushd "$task_dir" >/dev/null
		git reset --hard "$remote"/"$branch"
		popd >/dev/null
	else
		msg "branch '$branch' does not exist either, creating both"
		git init "$task_dir"
		# TODO initial commit?
		pushd "$task_dir" >/dev/null
		test -n "$remote" && git remote add "$remote" "$git_dir" # TODO use a relative path to allow moving parent repo?
		popd
	fi
else
	pushd "$task_dir" >/dev/null
	test -n "$remote" && git pull --quiet --ff-only "$remote" "$branch"
	popd >/dev/null
fi

command="$*"

pushd "$task_dir" >/dev/null
set +e
TASKDATA="$task_dir" "$task_command" $*
set -e
git add --all .
GIT_COMMITTER_NAME="gtw" \
GIT_COMMITTER_EMAIL="gtw@localhost" \

# if index has changes, commit them
if ! git rev-parse HEAD &>/dev/null || ! git diff-index --cached --quiet HEAD --; then
	git commit --quiet -m "task $command"
fi

test -n "$remote" && git push --quiet "$remote" master:$branch
